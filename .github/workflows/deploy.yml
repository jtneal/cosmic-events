name: Deploy to EKS

on:
  push:
    branches:
      - main

env:
  ECR_REPOSITORY: nonprod-cosmic-events-ecr
  EKS_CLUSTER_NAME: nonprod-cosmic-events-eks
  AWS_REGION: us-east-2

jobs:

  build:
    name: Deployment
    runs-on: ubuntu-latest
    environment: nonprod
    steps:
    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2
    - name: Check out code
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
    - name: Create/Update K8s Secret
      env:
        KUBE_NS: cosmic-events
        CACHE_URL: ${{ secrets.CACHE_URL }}
        CDN_BUCKET: ${{ secrets.CDN_BUCKET }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        DATABASE_RESOURCE_ARN: ${{ secrets.DATABASE_RESOURCE_ARN }}
        DATABASE_SECRET_ARN: ${{ secrets.DATABASE_SECRET_ARN }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      run: |
        kubectl get ns "$KUBE_NS" >/dev/null 2>&1 || kubectl create ns "$KUBE_NS"
        kubectl -n "$KUBE_NS" create secret generic cosmic-events-app \
          --from-literal=CACHE_URL="$CACHE_URL" \
          --from-literal=CDN_BUCKET="$CDN_BUCKET" \
          --from-literal=DATABASE_NAME="$DATABASE_NAME" \
          --from-literal=DATABASE_RESOURCE_ARN="$DATABASE_RESOURCE_ARN" \
          --from-literal=DATABASE_SECRET_ARN="$DATABASE_SECRET_ARN" \
          --from-literal=GOOGLE_CLIENT_ID="$GOOGLE_CLIENT_ID" \
          --from-literal=SESSION_SECRET="$SESSION_SECRET" \
          --dry-run=client -o yaml | kubectl apply -f -
    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/deployment.yml && \
        kubectl apply -f manifests/deployment.yml
        kubectl apply -f manifests/service.yml
